version: "3.2"
services:
    rabbitmq-server:
        # build: ./rabbitmq
        image: mrgrassho/geo-diff_rabbitmq-server:latest
        hostname: rabbitmq-server
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
            RABBITMQ_DEFAULT_USER: "guest"
            RABBITMQ_DEFAULT_PASS: "guest"
            RABBITMQ_DEFAULT_VHOST: "/"
        ports:
            - "15672:15672"
            - "15674:15674"
            - "5672:5672"
        deploy:
            mode: global
            restart_policy:
              condition: on-failure
        volumes:
            - ./rabbitmq:/var/lib/rabbitmq:rw
        labels:
            NAME: "rabbitmq-server"

    mongo-server:
        # build: ./mongo
        image: mrgrassho/geo-diff_mongo-server:latest
        hostname: mongo-server
        ports:
            - "27017:27017"
        deploy:
            restart_policy:
              condition: on-failure
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        volumes:
            - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - "8086:8081"
        deploy:
            restart_policy:
              condition: on-failure
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example
            ME_CONFIG_MONGODB_SERVER: mongo-server

    worker:
        # build: ./worker
        image: mrgrassho/geo-diff_worker:latest
        depends_on:
            - rabbitmq-server
        deploy:
            mode: replicated
            replicas: 6
            update_config:
              parallelism: 6
              delay: 10s
            restart_policy:
              condition: on-failure
        environment:
            AMQP_URL: amqp://guest:guest@rabbitmq-server:5672/%2f
            TASK_QUEUE: TASK_QUEUE
            RES_XCHG: RESULT_XCHG
        volumes:
            - './worker:/worker'

    backend:
        # build: ./backend
        image: mrgrassho/geo-diff_backend:latest
        restart: always
        ports:
            - "8087:8080"
        depends_on:
            - rabbitmq-server
            - mongo-server
        deploy:
            restart_policy:
              condition: on-failure
        tty: true
        volumes:
            - './backend:/backend'

    admin-worker:
        build: ./admin-worker
        image: mrgrassho/geo-diff_admin-worker:latest
        restart: always
        depends_on:
            - rabbitmq-server
        deploy:
            restart_policy:
              condition: on-failure
        tty: true
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - './admin-worker:/admin-worker'

# Host volumes used to store code.
volumes:
    worker:
    backend:
